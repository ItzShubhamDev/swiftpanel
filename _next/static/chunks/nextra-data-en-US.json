{"/deployment":{"title":"Index","data":{"":"","deployment#Deployment":"After configuring webserver, we will use pm2 to run our application in the background.\nnpm install -g pm2\ncd /var/www/panel\npm2 start bin/server.js --name=panel"}},"/database":{"title":"Index","data":{"":"","database-configuration#Database Configuration":"We will need a database setup and a user with the necessary permissions to run the application.\n# If using mariadb\nmariadb -u root -p\n\n# If using mysql\nmysql -u root -p\n\n# Remember to replace 'password' with a secure password\nCREATE USER 'app'@'127.0.0.1' IDENTIFIED BY 'password';\nCREATE DATABASE app;\nGRANT ALL PRIVILEGES ON app.* TO 'app'@'127.0.0.1' WITH GRANT OPTION;\nexit;"}},"/dependencies":{"title":"Index","data":{"":"","dependencies#Dependencies":"Node.JS 20 and higher\nMysql 8 and higher or MariaDB 10.2 and higher\nNginx\ncurl, unzip, git","dependecies-installation#Dependecies Installation":"curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -\ncurl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bash\napt update\napt -y install mariadb-server nginx nodejs unzip git"}},"/":{"title":"Introduction","data":{"":"Welcome to SwiftPanel! A Pterodactyl Panel Clone using Javascript","completion#Completion":"Application\tStatus\tNotes\tAPI Application\t‚úÖ\tAlmost Complete\tClient Application\t‚úÖ\tAlmost Complete\tAdmin\tüöÄ\tPartially Complete\tClient\t‚ö†Ô∏è\tOnly a little Complete"}},"/installation":{"title":"Index","data":{"":"","download-files#Download files":"First, create a directory for the panel files. This can be anywhere on your server, but we recommend /var/www/panel.\nmkdir -p /var/www/panel\ncd /var/www/panel\nNext, download the latest version of the panel from the releases page.\ncurl -Lo panel.zip https://github.com/itzshubhamdev/swiftpanel/releases/latest/download/panel.zip\nunzip panel.zip"}},"/environment":{"title":"Index","data":{"":"","environment-variables#Environment Variables":"cp .env.example .env","variables#Variables":"TZ - TimezonePORT - Port for the panelHOST - Host for the panelLOG_LEVEL - Log level for the panelAPP_KEY - App key for the panel (generate using openssl rand -base64 24 or https://generate-secret.vercel.app/32)NODE_ENV - Node environmentSESSION_DRIVER - SessionDB_HOST - Database hostDB_PORT - Database portDB_USER - Database userDB_PASSWORD - Database passwordDB_DATABASE - Database nameAPP_URL - URL for the panel","node-dependecies#Node Dependecies":"Install the node dependencies\nnpm install --prod"}},"/webserver":{"title":"Index","data":{"":"","getting-certificates#Getting Certificates":"We can use letsencrypt to get free SSL certificates for our domain.\nsudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d example.com","nginx-configuration#Nginx Configuration":"We can use the following configuration to proxy the requests to our application.\nMake sure to replace <domain> with your domain and <port> with the port your application is running on.\nserver {\nlisten 80;\nserver_name <domain>;\nreturn 301 https://$server_name$request_uri;\n}\n\nserver {\nlisten 443 http2 ssl;\n\nserver_name <domain>;\nssl_certificate /etc/letsencrypt/live/<domain>/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/<domain>/privkey.pem;\nssl_session_cache shared:SSL:10m;\nssl_protocols SSLv3 TLSv1.2 TLSv1.3;\nssl_ciphers HIGH:!aNULL:!MD5;\nssl_prefer_server_ciphers on;\n\nlocation / {\nproxy_pass http://localhost:<port>;\nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection 'upgrade';\nproxy_set_header Host $host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-Proto $scheme;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_cache_bypass $http_upgrade;\n}\n}"}}}